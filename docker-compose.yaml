version: '2.1'

services:
  config:
    restart: always
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    build:
      context: ./config
    container_name: config
    networks:
      - information-center-prod-network
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  gateway:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_HOST: config
      REGISTRY_SERVICE_HOST: registry
      REGISTRY_USERNAME: $REGISTRY_USERNAME
      REGISTRY_PASSWORD: $REGISTRY_PASSWORD
    networks:
      - information-center-prod-network
    build:
      context: ./gateway
    restart: always
    container_name: gateway
    ports:
      - 8880:8880
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  topic-service-database:
    container_name: topic-service-database
    image: postgres:11.2
    restart: always
    environment:
      - POSTGRES_PASSWORD=${TOPIC_SERVICE_DATABASE_PASSWORD}
      - POSTGRES_USER=${TOPIC_SERVICE_DATABASE_USER}
      - POSTGRES_DB=${TOPIC_SERVICE_DATABASE}
    volumes:
      - ts-db:/var/lib/postgresql/topic-service-database/data
    networks:
      - information-center-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${TOPIC_SERVICE_DATABASE} -U ${TOPIC_SERVICE_DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  topic-service:
    restart: always
    build:
      context: ./topic-service
    container_name: topic-service
    networks:
      - information-center-prod-network
    ports:
      - 8881:8881
    environment:
      - CONFIG_SERVICE_PASSWORD
      - TOPIC_SERVICE_DATABASE
      - TOPIC_SERVICE_DATABASE_USER
      - TOPIC_SERVICE_DATABASE_PASSWORD
      - TOPIC_SERVICE_DATABASE_PORT=5432
      - TOPIC_SERVICE_DATABASE_HOST=topic-service-database
      - CONFIG_SERVICE_HOST=config
      - REGISTRY_SERVICE_HOST=registry
      - REGISTRY_USERNAME
      - REGISTRY_PASSWORD
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  question-service-database:
    container_name: question-service-database
    image: postgres:11.2
    restart: always
    environment:
      - POSTGRES_PASSWORD=${QUESTION_SERVICE_DATABASE_PASSWORD}
      - POSTGRES_USER=${QUESTION_SERVICE_DATABASE_USER}
      - POSTGRES_DB=${QUESTION_SERVICE_DATABASE}
    volumes:
      - qs-db:/var/lib/postgresql/question-service-database/data
    networks:
      - information-center-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${QUESTION_SERVICE_DATABASE} -U ${QUESTION_SERVICE_DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  question-service:
    restart: always
    build:
      context: ./question-service
    networks:
      - information-center-prod-network
    container_name: question-service
    ports:
      - 8882:8882
    environment:
      - CONFIG_SERVICE_PASSWORD
      - QUESTION_SERVICE_DATABASE
      - QUESTION_SERVICE_DATABASE_USER
      - QUESTION_SERVICE_DATABASE_PASSWORD
      - QUESTION_SERVICE_DATABASE_PORT=5432
      - QUESTION_SERVICE_DATABASE_HOST=question-service-database
      - CONFIG_SERVICE_HOST=config
      - REGISTRY_SERVICE_HOST=registry
      - REGISTRY_USERNAME
      - REGISTRY_PASSWORD
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  account-service-database:
    container_name: account-service-database
    image: postgres:11.2
    restart: always
    environment:
      - POSTGRES_PASSWORD=${ACCOUNT_SERVICE_DATABASE_PASSWORD}
      - POSTGRES_USER=${ACCOUNT_SERVICE_DATABASE_USER}
      - POSTGRES_DB=${ACCOUNT_SERVICE_DATABASE}
    volumes:
      - acs-db:/var/lib/postgresql/account-service-database/data
    networks:
      - information-center-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${ACCOUNT_SERVICE_DATABASE} -U ${ACCOUNT_SERVICE_DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  account-service:
    restart: always
    container_name: account-service
    build:
      context: ./account-service
    networks:
      - information-center-prod-network
    ports:
      - 8883:8883
    environment:
      - CONFIG_SERVICE_PASSWORD
      - ACCOUNT_SERVICE_DATABASE
      - ACCOUNT_SERVICE_DATABASE_USER
      - ACCOUNT_SERVICE_DATABASE_PASSWORD
      - ACCOUNT_SERVICE_DATABASE_PORT=5432
      - ACCOUNT_SERVICE_DATABASE_HOST=account-service-database
      - CONFIG_SERVICE_HOST=config
      - REGISTRY_SERVICE_HOST=registry
      - REGISTRY_USERNAME
      - REGISTRY_PASSWORD
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  auth-service-database:
    container_name: auth-service-database
    image: postgres:11.2
    restart: always
    environment:
      - POSTGRES_PASSWORD=${AUTH_SERVICE_DATABASE_PASSWORD}
      - POSTGRES_USER=${AUTH_SERVICE_DATABASE_USER}
      - POSTGRES_DB=${AUTH_SERVICE_DATABASE}
    volumes:
      - aus-db:/var/lib/postgresql/auth-service-database/data
    networks:
      - information-center-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${AUTH_SERVICE_DATABASE} -U ${AUTH_SERVICE_DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    restart: always
    container_name: auth-service
    build:
      context: ./auth-service
    networks:
      - information-center-prod-network
    ports:
      - 8884:8884
    environment:
      - CONFIG_SERVICE_PASSWORD
      - AUTH_SERVICE_DATABASE
      - AUTH_SERVICE_DATABASE_USER
      - AUTH_SERVICE_DATABASE_PASSWORD
      - AUTH_SERVICE_DATABASE_PORT=5432
      - AUTH_SERVICE_DATABASE_HOST=auth-service-database
      - CONFIG_SERVICE_HOST=config
      - REGISTRY_SERVICE_HOST=registry
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  registry:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_HOST: config
      REGISTRY_SERVICE_HOST: registry
      REGISTRY_USERNAME: $REGISTRY_USERNAME
      REGISTRY_PASSWORD: $REGISTRY_PASSWORD
    container_name: registry
    networks:
      - information-center-prod-network
    build:
      context: ./registry
    restart: always
    ports:
      - 8761:8761
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  monitoring:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_HOST: config
      REGISTRY_SERVICE_HOST: registry
      REGISTRY_USERNAME: $REGISTRY_USERNAME
      REGISTRY_PASSWORD: $REGISTRY_PASSWORD
    container_name: monitoring
    networks:
      - information-center-prod-network
    build:
      context: ./monitoring
    restart: always
    ports:
      - 9000:9000
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  information-center-web:
    build:
      context: ../information-center-web
      args:
        - API_ENDPOINT=${API_ENDPOINT}
        - PRODUCTION_MODE=${PRODUCTION_MODE}
        - ENVIRONMENT_FILE=${ENVIRONMENT_FILE}
    networks:
      - information-center-prod-network
    ports:
      - 80:80


volumes:
  ts-db:
  qs-db:
  acs-db:
  aus-db:
networks:
  information-center-prod-network:
