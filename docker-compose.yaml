version: '2.1'

services:
  base-microservice:
    build: .
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      CONFIG_SERVICE_HOST: config
      REGISTRY_SERVICE_HOST: registry
      REGISTRY_USERNAME: $REGISTRY_USERNAME
      REGISTRY_PASSWORD: $REGISTRY_PASSWORD
      EMAIL_ADDRESS: $EMAIL_ADDRESS
      EMAIL_PASSWORD: $EMAIL_PASSWORD
      COMPANY_NAME: $COMPANY_NAME
      COMPANY_SITE_URL: $COMPANY_SITE_URL
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
      RABBITMQ_HOST: $RABBITMQ_HOST

  config:
    extends:
      service: base-microservice
    restart: always
    build:
      context: ./config
    container_name: config
    networks:
      - information-center-prod-network
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  gateway:
    extends:
      service: base-microservice
    networks:
      - information-center-prod-network
    environment:
      ALLOWED_ORIGINS: $ALLOWED_ORIGINS
    build:
      context: ./gateway
    restart: always
    container_name: gateway
    ports:
      - 8880:8880
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  course-service-database:
    container_name: course-service-database
    image: postgres:11.2
    restart: always
    environment:
      - POSTGRES_PASSWORD=${COURSE_SERVICE_DATABASE_PASSWORD}
      - POSTGRES_USER=${COURSE_SERVICE_DATABASE_USER}
      - POSTGRES_DB=${COURSE_SERVICE_DATABASE}
    volumes:
      - ts-db:/var/lib/postgresql/course-service-database/data
    networks:
      - information-center-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${COURSE_SERVICE_DATABASE} -U ${COURSE_SERVICE_DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  course-service:
    extends:
      service: base-microservice
    restart: always
    build:
      context: ./course-service
    container_name: course-service
    networks:
      - information-center-prod-network
    ports:
      - 8881:8881
    environment:
      - COURSE_SERVICE_DATABASE
      - COURSE_SERVICE_DATABASE_USER
      - COURSE_SERVICE_DATABASE_PASSWORD
      - COURSE_SERVICE_DATABASE_PORT=5432
      - COURSE_SERVICE_DATABASE_HOST=course-service-database
      - COURSE_SERVICE_PASSWORD
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  quiz-service-database:
    container_name: quiz-service-database
    image: postgres:11.2
    restart: always
    environment:
      - POSTGRES_PASSWORD=${QUIZ_SERVICE_DATABASE_PASSWORD}
      - POSTGRES_USER=${QUIZ_SERVICE_DATABASE_USER}
      - POSTGRES_DB=${QUIZ_SERVICE_DATABASE}
    volumes:
      - qs-db:/var/lib/postgresql/quiz-service-database/data
    networks:
      - information-center-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${QUIZ_SERVICE_DATABASE} -U ${QUIZ_SERVICE_DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  quiz-service:
    extends:
      service: base-microservice
    restart: always
    build:
      context: ./quiz-service
    networks:
      - information-center-prod-network
    container_name: quiz-service
    ports:
      - 8882:8882
    environment:
      - QUIZ_SERVICE_DATABASE
      - QUIZ_SERVICE_DATABASE_USER
      - QUIZ_SERVICE_DATABASE_PASSWORD
      - QUIZ_SERVICE_DATABASE_PORT=5432
      - QUIZ_SERVICE_DATABASE_HOST=quiz-service-database
      - QUIZ_SERVICE_PASSWORD
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  account-service-database:
    container_name: account-service-database
    image: postgres:11.2
    restart: always
    environment:
      - POSTGRES_PASSWORD=${ACCOUNT_SERVICE_DATABASE_PASSWORD}
      - POSTGRES_USER=${ACCOUNT_SERVICE_DATABASE_USER}
      - POSTGRES_DB=${ACCOUNT_SERVICE_DATABASE}
    volumes:
      - acs-db:/var/lib/postgresql/account-service-database/data
    networks:
      - information-center-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${ACCOUNT_SERVICE_DATABASE} -U ${ACCOUNT_SERVICE_DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  account-service:
    extends:
      service: base-microservice
    restart: always
    container_name: account-service
    build:
      context: ./account-service
    networks:
      - information-center-prod-network
    ports:
      - 8883:8883
    environment:
      - ACCOUNT_SERVICE_DATABASE
      - ACCOUNT_SERVICE_DATABASE_USER
      - ACCOUNT_SERVICE_DATABASE_PASSWORD
      - ACCOUNT_SERVICE_DATABASE_PORT=5432
      - ACCOUNT_SERVICE_DATABASE_HOST=account-service-database
      - ACCOUNT_SERVICE_PASSWORD
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  auth-service-database:
    container_name: auth-service-database
    image: postgres:11.2
    restart: always
    environment:
      - POSTGRES_PASSWORD=${AUTH_SERVICE_DATABASE_PASSWORD}
      - POSTGRES_USER=${AUTH_SERVICE_DATABASE_USER}
      - POSTGRES_DB=${AUTH_SERVICE_DATABASE}
    volumes:
      - aus-db:/var/lib/postgresql/auth-service-database/data
    networks:
      - information-center-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${AUTH_SERVICE_DATABASE} -U ${AUTH_SERVICE_DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    extends:
      service: base-microservice
    restart: always
    container_name: auth-service
    build:
      context: ./auth-service
    networks:
      - information-center-prod-network
    ports:
      - 8884:8884
    environment:
      - AUTH_SERVICE_DATABASE
      - AUTH_SERVICE_DATABASE_USER
      - AUTH_SERVICE_DATABASE_PASSWORD
      - AUTH_SERVICE_DATABASE_PORT=5432
      - AUTH_SERVICE_DATABASE_HOST=auth-service-database
      - QUIZ_SERVICE_PASSWORD
      - COURSE_SERVICE_PASSWORD
      - EMAIL_SERVICE_PASSWORD
      - ACCOUNT_SERVICE_PASSWORD
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  registry:
    extends:
      service: base-microservice
    container_name: registry
    networks:
      - information-center-prod-network
    build:
      context: ./registry
    restart: always
    ports:
      - 8761:8761
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  monitoring:
    extends:
      service: base-microservice
    container_name: monitoring
    networks:
      - information-center-prod-network
    build:
      context: ./monitoring
    restart: always
    ports:
      - 9000:9000
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  email-service:
    extends:
      service: base-microservice
    restart: always
    container_name: email-service
    build:
      context: ./email-service
    networks:
      - information-center-prod-network
    environment:
      SUBSCRIPTION_CONFIRMATION_PATH: $SUBSCRIPTION_CONFIRMATION_PATH
      UNSUBSCRIPTION_PATH: $UNSUBSCRIPTION_PATH
      EMAIL_SERVICE_PASSWORD: $EMAIL_SERVICE_PASSWORD
    ports:
      - 8885:8885
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  information-center-web:
    build:
      context: ../information-center-web
      args:
        - API_ENDPOINT=${API_ENDPOINT}
        - PRODUCTION_MODE=${PRODUCTION_MODE}
        - ENVIRONMENT_FILE=${ENVIRONMENT_FILE}
    networks:
      - information-center-prod-network
    ports:
      - 80:80

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - information-center-prod-network
    logging:
      options:
        max-size: "10m"
        max-file: "10"

volumes:
  vs:
  ts-db:
  qs-db:
  acs-db:
  aus-db:
networks:
  information-center-prod-network:
